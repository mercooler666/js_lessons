//const arr = [1, 2, 3]; // создаем массив
//масиив - это перечень информации по порядку, у каждой сущности есть порядок
//console.log(arr[1]); // вызов обьекта с нумерацией 1 //2 - в массивах нумерация  с нуля
// const obj = {a; 1, b: 2}; // похоже на массив, но это обьект
// const obj = {
//      Anna: 500,
//     'Alice': 800;
// }; - обьект

//['Anna', 500, 'Alice', 800]  // записали обьект как массив
//методы и свойства массивов (например по перебору порядка или длине массива )

// const arr = ['a', 'b', 'c'];
// const arrObj = {
//     0: 'a',
//     1: 'b',
//     2: 'c',
// }
//console.log(arr[1]); // выхываем 1 номер массива arr
//console.log(arrObj[1]); // выхываем 1 номер массива arrObj используем скобки []
// arrObj.b = '1234'; // добавили свойство
// arrObj['b'] = '1234'; // другой способ добавить свойство
// console.log(arrObj['b']); // не забываем об кавычках '' чтоб понимали обращаемся к свойству а не переменной//
// console.log(arrObj.b); // обращаемся к свойству без кавычек 

// const b = 'b'

// const arr = ['a', 'b', 'c'];
// arr[10] = '3456'; пробуем добавить 11й елемент массиву
// console.log(arr); // [ 'a', 'b', 'c', <7 empty items>, '3456' ] 

//вложенные структуры 
const arrObj = {
     0: 'a',
     1: 'b',
     2: 'c',
     abc: { //abc - вложенный обьект
        df: [{},{}], // df вложенный массив c вложенными в него обьектами {}
        def: { //def - вложенный обьект вложенного обьекта

        }
     }
 };